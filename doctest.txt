Testing the merging features

Tests for the ``determinator``
==============================

>>> from determinator import *

Using ``SourceFile``
--------------------

>>> sf = SourceFile('determinator.py')
Traceback (most recent call last):
	File "<stdin>", line 1, in <module>
TypeError: __init__() takes exactly 4 arguments (2 given)

>>> sf = SourceFile('determinator.py',None,{})

>>> sf.type
('text/x-python', None)

>>> sf.get_metadata()
Traceback (most recent call last):
	File "<stdin>", line 1, in <module>
	File "determinator.py", line 27, in get_metadata
		self.metadata.update(self.fnparser.parse_file(self))
AttributeError: 'NoneType' object has no attribute 'parse_file'

>>> sf = SourceFile('determinator.py',FilenameParser('filename-patterns.txt'),{})

>>> fnparser = FilenameParser

>>> fnparser.load_rules('no-real-file')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unbound method load_rules() must be called with FilenameParser instance as first argument (got str instance instead)

>>> fnparser = FilenameParser()

>>> fnparser.load_rules('no-real-file')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "determinator.py", line 69, in load_rules
    with open(filename, 'r') as file:
IOError: [Errno 2] No such file or directory: 'no-real-file'

>>> fnparser.load_rules('filename-patterns.txt')

>>> sf = SourceFile('determinator.py',fnparser,{})
 

